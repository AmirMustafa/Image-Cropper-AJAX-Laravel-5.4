var MediumEditorToolbarStates=MediumEditor.Extension.extend({name:"toolbar_states",attributeName:"data-toolbar-state",hideClass:"hide",states:{},hasNodeNames:!1,init:function(){var a=this;MediumEditor.Extension.prototype.init.apply(this,arguments),Object.keys(this.states).forEach(function(b){var c=a.states[b];c.nodeNames&&(a.hasNodeNames=!0)}),this.subscribe("positionToolbar",this.handlePositionToolbar.bind(this))},destroy:function(){},selectedStateName:"default",pendingStateName:null,checkState:function(a){this.pendingStateName||(this.getStateNameForNode&&"function"==typeof this.getStateNameForNode?this.pendingStateName=this.getStateNameForNode(a)||null:this.hasNodeNames?this.pendingStateName=this.getStateNameFromNodeNames(a)||null:a.hasAttribute(this.attributeName)&&(this.pendingStateName=a.getAttribute(this.attributeName)||null)),MediumEditor.util.isMediumEditorElement(a)&&(this.selectedStateName=this.pendingStateName||"default",this.pendingStateName=null)},getStateNameFromNodeNames:function(a){var b,c=this;return Object.keys(this.states).forEach(function(d){var e=c.states[d];e.nodeNames&&e.nodeNames.indexOf(a.nodeName)>=0&&(b=d)}),b},handlePositionToolbar:function(a,b){var c={buttons:this.base.getExtensionByName("toolbar").buttons};c=this.getState&&"function"==typeof this.getState?this.getState(b)||c:this.states[this.selectedStateName]||c,this.updateToolbarState(c)},updateToolbarState:function(a){var b,c,d=this.base.getExtensionByName("toolbar"),e=this;d.forEachExtension(function(f){var g;"function"==typeof f.getButton&&(-1!=a.buttons.indexOf(f.name)?(g=f.getButton(),g.classList.remove(e.hideClass),b=b||g,c=g):(g=f.getButton(),g.classList.add(e.hideClass)),g.classList.remove(d.firstButtonClass),g.classList.remove(d.lastButtonClass))}),b&&c&&(b.classList.add(d.firstButtonClass),c.classList.add(d.lastButtonClass))}});