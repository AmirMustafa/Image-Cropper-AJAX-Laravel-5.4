{"version":3,"sources":["medium-editor-embed-button.js"],"names":["window","document","MediumEditor","toDashed","name","replace","u","toLowerCase","dataset","node","attr","value","set","fn","self","del","get","arguments","length","head","setAttribute","getAttribute","removeAttribute","Error","embedButton","action","contentDefault","contentFA","aria","defaults","msgSelectOnlyUrl","msgSelectOnlyEmbadableUrl","oembedProxy","cssEmbedOverlay","cssEmbeds","cssSelected","instagramEmbedScript","twitterEmbedScripts","facebookEmbedScripts","ifrmelyEmbedScript","vimeoEmbedScripts","init","extensions","button","prototype","call","this","opts","util","extend","embedOpts","doc","$embeds","querySelectorAll","base","_originalSerializerPreEmbeds","serialize","embedSerialize","attachEvents","i","$elem","querySelector","appendOverlay","on","unselectEmbed","bind","$allEmbeds","selectEmbed","removeEmbed","elements","deleteEmbedOnBackspaceAndDel","ajaxGet","url","callback","failCallback","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","DONE","status","apply","JSON","parse","responseText","open","setRequestHeader","location","href","send","handleClick","e","preventDefault","stopPropagation","range","selection","getSelectionRange","startContainer","nodeName","endContainer","getClosestTag","getSelectedParentElement","execAction","alert","selectedText","getSelection","indexOf","data","deleteContents","insertEmbed","checkContentChanged","txt","toString","createRange","text","$overlay","createElement","className","appendChild","id","guid","$wrapper","stringify","innerHTML","html","pasteHTML","getHtml","cleanAttrs","cleanTags","getElementById","parseSiteSpecific","loadIfIframely","injectScript","instgrm","Embeds","process","setTimeout","FB","XFBML","twttr","widgets","load","$target","target","$parent","parentElement","classList","contains","$alreadySelected","forEach","elem","remove","add","$embed","isKey","keyCode","BACKSPACE","DELETE","p","insertBefore","removeChild","$current","getSelectionStart","options","ownerDocument","caretOffsets","getCaretOffsets","left","$isEmbed","previousSibling","newP","embedExtension","getExtensionByName","key","hasOwnProperty","obj","$data","responseData","originalData","simpleData","$wrap","cloneNode","script","type","async","onLoad","src","protocol","getElementsByTagName","EmbedButtonExtension"],"mappings":"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","file":"medium-editor-embed-button.js","sourcesContent":["/**\n * Created by orhanveli on 15/08/16.\n */\n\n(function (window, document, MediumEditor) {\n    \"use strict\";\n\n\n\n// replace namesLikeThis with names-like-this\n    function toDashed(name) {\n        return name.replace(/([A-Z])/g, function(u) {\n            return \"-\" + u.toLowerCase();\n        });\n    }\n\n    var fn;\n\n    if (typeof document !== \"undefined\" && document.head && document.head.dataset) {\n        fn = {\n            set: function(node, attr, value) {\n                node.dataset[attr] = value;\n            },\n            get: function(node, attr) {\n                return node.dataset[attr];\n            },\n            del: function (node, attr) {\n                delete node.dataset[attr];\n            }\n        };\n    } else {\n        fn = {\n            set: function(node, attr, value) {\n                node.setAttribute('data-' + toDashed(attr), value);\n            },\n            get: function(node, attr) {\n                return node.getAttribute('data-' + toDashed(attr));\n            },\n            del: function (node, attr) {\n                node.removeAttribute('data-' + toDashed(attr));\n            }\n        };\n    }\n\n    function dataset(node, attr, value) {\n        var self = {\n            set: set,\n            get: get,\n            del: del\n        };\n\n        function set(attr, value) {\n            fn.set(node, attr, value);\n            return self;\n        }\n\n        function del(attr) {\n            fn.del(node, attr);\n            return self;\n        }\n\n        function get(attr) {\n            return fn.get(node, attr);\n        }\n\n        if (arguments.length === 3) {\n            return set(attr, value);\n        }\n        if (arguments.length == 2) {\n            return get(attr);\n        }\n\n        return self;\n    }\n\n\n\n    if (typeof MediumEditor !== \"function\") {\n        throw new Error(\"Medium Editor is not loaded on the page.\");\n    }\n\n    var embedButton = {\n        \"name\": \"embedButton\",\n        \"action\": \"embedAction\",\n        \"contentDefault\": \"E\",\n        \"contentFA\": '<i class=\"fa fa-youtube-play\"></i>',\n        \"aria\": \"Embed media\",\n\n        \"defaults\": {\n            \"msgSelectOnlyUrl\": \"Seçtiğiniz metin geçerli bir URL değil!\",\n            \"msgSelectOnlyEmbadableUrl\": \"Seçtiğiniz URL desteklenmiyor!\",\n            \"oembedProxy\": \"http://iframe.ly/api/oembed?api_key=APIKEY_HERE&url=\",\n            \"cssEmbedOverlay\": \"medium-editor-embeds-overlay\",\n            \"cssEmbeds\": \"medium-editor-embeds\",\n            \"cssSelected\": \"medium-editor-embeds-selected\",\n            \"instagramEmbedScript\": \"//platform.instagram.com/en_US/embeds.js\",\n            \"twitterEmbedScripts\": \"//platform.twitter.com/widgets.js\",\n            \"facebookEmbedScripts\": \"//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.7\",\n            \"ifrmelyEmbedScript\": \"//cdn.iframe.ly/embed.js\",\n            \"vimeoEmbedScripts\": \"\"\n        },\n\n        \"init\": function() {\n            MediumEditor.extensions.button.prototype.init.call(this);\n            this.opts = MediumEditor.util.extend({}, this.defaults, this.embedOpts);\n\n            var self = this,\n                doc = self.document,\n                $embeds = doc.querySelectorAll(\".\" + self.opts.cssEmbeds);\n\n            this.base._originalSerializerPreEmbeds = self.base.serialize;\n            this.base.serialize = self.embedSerialize;\n            this.attachEvents();\n\n            if (typeof $embeds === \"undefined\" || $embeds === null || $embeds.length === 0) {\n                return;\n            }\n\n            for (var i = 0; i < $embeds.length; i++) {\n                var $elem = $embeds[i];\n                $elem.setAttribute(\"contenteditable\", false);\n                if ($elem.querySelector(\".\" + self.opts.cssEmbedOverlay) === null) {\n                    self.appendOverlay($elem);\n                }\n            }\n\n        },\n\n        \"attachEvents\": function() {\n            this.on(this.document, \"click\", this.unselectEmbed.bind(this));\n            var $allEmbeds = this.document.querySelectorAll(\".\" + this.opts.cssEmbedOverlay);\n            this.on($allEmbeds, \"click\", this.selectEmbed.bind(this));\n            this.on(this.document, \"keydown\", this.removeEmbed.bind(this));\n            this.on(this.base.elements, \"keydown\", this.deleteEmbedOnBackspaceAndDel.bind(this));\n        },\n\n        \"ajaxGet\": function(url, callback, failCallback) {\n            var xmlhttp = new XMLHttpRequest();\n            xmlhttp.onreadystatechange = function() {\n                if (xmlhttp.readyState === XMLHttpRequest.DONE) {\n                    if (xmlhttp.status === 200) {\n                        callback.apply(xmlhttp, [JSON.parse(xmlhttp.responseText)]);\n                    } else if (xmlhttp.status === 400) {\n                        //console.log('There was an error 400');\n                    } else {\n                        //console.log('something else other than 200 was returned');\n                        if (typeof failCallback !== \"undefined\") {\n                            failCallback.apply(xmlhttp);\n                        }\n                    }\n                }\n            };\n\n            xmlhttp.open(\"GET\", url, true);\n            xmlhttp.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            xmlhttp.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\n            xmlhttp.setRequestHeader(\"Referrer\", document.location.href);\n            xmlhttp.send();\n            return xmlhttp;\n        },\n\n        \"handleClick\": function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var self = this;\n\n            var range = MediumEditor.selection.getSelectionRange(self.document);\n\n            if (range.startContainer.nodeName.toLowerCase() === \"a\" ||\n                range.endContainer.nodeName.toLowerCase() === \"a\" ||\n                MediumEditor.util.getClosestTag(MediumEditor.selection.getSelectedParentElement(range), \"a\")) {\n                return self.execAction(\"unlink\");\n            }\n\n            if (range.startContainer.nodeName.toLowerCase() !== \"#text\" &&\n                range.endContainer.nodeName.toLowerCase() !== \"#text\") {\n                alert(self.opts.msgSelectOnlyUrl);\n                return false;\n            }\n\n            var selectedText = this.getSelection();\n\n            if (selectedText.indexOf(\"http\") < 0) {\n                alert(self.opts.msgSelectOnlyUrl);\n                return false;\n            }\n\n            self.ajaxGet(self.opts.oembedProxy + selectedText,\n                function(data) {\n                    range.deleteContents();\n                    self.insertEmbed(data);\n                });\n\n            self.base.checkContentChanged();\n        },\n\n        \"getSelection\": function() {\n            var txt = \"\";\n            if (window.getSelection) {\n                txt = window.getSelection().toString();\n            } else if (document.getSelection) {\n                txt = document.getSelection().toString();\n            } else if (document.selection) {\n                txt = document.selection.createRange().text;\n            }\n            return txt;\n        },\n\n        \"appendOverlay\": function($elem) {\n            var $overlay = this.document.createElement(\"div\");\n            $overlay.className = this.opts.cssEmbedOverlay;\n            $elem.appendChild($overlay);\n        },\n\n        \"insertEmbed\": function(data) {\n            var self = this,\n                id = MediumEditor.util.guid(),\n                $wrapper = self.document.createElement(\"div\");\n\n            $wrapper.setAttribute(\"id\", id);\n            $wrapper.setAttribute(\"contenteditable\", false);\n\n            dataset($wrapper, \"originalResponse\", JSON.stringify(data));\n\n            $wrapper.className = self.opts.cssEmbeds;\n            $wrapper.innerHTML = data.html;\n            self.appendOverlay($wrapper);\n            self.base.pasteHTML(self.getHtml($wrapper),\n                {\n                    cleanAttrs: [],\n                    cleanTags: []\n                });\n            var $overlay = self.document.getElementById(id).querySelector(\".\" + self.opts.cssEmbedOverlay);\n            this.on($overlay, \"click\", this.selectEmbed.bind(this));\n\n            self.parseSiteSpecific(data);\n        },\n\n        \"loadIfIframely\": function() {\n            if (typeof this.opts.oembedProxy !== \"undefined\" && this.opts.oembedProxy.indexOf(\"iframely\")) {\n                this.injectScript(this.opts.ifrmelyEmbedScript);\n            }\n        },\n\n        \"parseSiteSpecific\": function (data) {\n            var self = this;\n\n            if (data.url.indexOf(\"instagr\") > -1) {\n                if (typeof (window.instgrm) === \"undefined\") {\n                    self.injectScript(self.opts.instagramEmbedScript);\n                    return;\n                }\n                window.instgrm.Embeds.process();\n            } else if (data.url.indexOf(\"facebook\") > -1) {\n                if (typeof (window.FB) === \"undefined\") {\n                    self.injectScript(self.opts.facebookEmbedScripts);\n                }\n                setTimeout(function() {\n                    window.FB.XFBML.parse();\n                }, 1000);\n            } else if (data.url.indexOf(\"twitter\") > -1) {\n                if (typeof (window.twttr) === \"undefined\") {\n                    self.injectScript(self.opts.twitterEmbedScripts);\n                    return;\n                }\n                window.twttr.widgets.load();\n            }\n            else {\n                self.loadIfIframely();\n            }\n        },\n\n        \"selectEmbed\": function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var self = this,\n                $target = e.target,\n                $parent = $target.parentElement;\n\n            if ($parent.classList.contains(self.opts.cssSelected)) {\n                return;\n            }\n\n            var $alreadySelected = self.document.querySelectorAll(\".\" + self.opts.cssEmbeds);\n            if (typeof $alreadySelected !== \"undefined\" && $alreadySelected !== null) {\n                $alreadySelected.forEach(function(elem) {\n                    elem.classList.remove(self.opts.cssSelected);\n                });\n            }\n\n            $parent.classList.add(self.opts.cssSelected);\n        },\n\n        \"unselectEmbed\": function(e) {\n            var self = this,\n                $target = e.target,\n                $embeds = self.document.querySelectorAll(\".\" + self.opts.cssEmbeds);\n\n            if (typeof $embeds === \"undefined\" || $embeds === null || $embeds.length === 0) {\n                return;\n            }\n\n            if ($target.classList.contains(self.opts.cssEmbedOverlay)) {\n                return;\n            }\n\n            //clear all selecteds\n            for (var i = 0; i < $embeds.length; i++) {\n                var $elem = $embeds[i];\n                $elem.classList.remove(self.opts.cssSelected);\n            }\n        },\n\n        \"removeEmbed\": function(e) {\n            var $embed,\n                self = this;\n\n            if (!MediumEditor.util.isKey(e, [MediumEditor.util.keyCode.BACKSPACE, MediumEditor.util.keyCode.DELETE])) {\n                return;\n            }\n\n            $embed = self.document.querySelector(\".\" + self.opts.cssSelected);\n\n            if ($embed === null) {\n                return;\n            }\n\n            e.preventDefault();\n\n            var p = self.document.createElement(\"p\");\n            $embed.parentElement.insertBefore(p, $embed);\n            $embed.parentElement.removeChild($embed);\n        },\n\n        \"deleteEmbedOnBackspaceAndDel\": function(e) {\n            if (!MediumEditor.util.isKey(e, [MediumEditor.util.keyCode.DELETE, MediumEditor.util.keyCode.BACKSPACE])) {\n                return;\n            }\n\n            var $current = MediumEditor.selection.getSelectionStart(this.base.options.ownerDocument),\n                self = this,\n                range = MediumEditor.selection.getSelectionRange(self.document),\n                p = MediumEditor.util.getClosestTag(MediumEditor.selection.getSelectedParentElement(range), \"p\"),\n                caretOffsets = MediumEditor.selection.getCaretOffsets($current);\n\n            if (caretOffsets.left > 0) {\n                return;\n            }\n\n            var $isEmbed = p.previousSibling;\n\n            if (typeof $isEmbed === \"undefined\" ||\n                typeof $isEmbed.classList === \"undefined\" ||\n                !$isEmbed.classList.contains(self.opts.cssEmbeds)) {\n                return;\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            var newP = self.document.createElement(\"p\");\n            $isEmbed.parentElement.insertBefore(newP, $isEmbed);\n            $isEmbed.parentElement.removeChild($isEmbed);\n        },\n\n        \"embedSerialize\": function() {\n            var self = this,\n                data = self._originalSerializerPreEmbeds(),\n                doc = self.options.ownerDocument,\n                embedExtension = self.getExtensionByName(\"embedButton\");\n\n            for (var key in data) {\n                // skip loop if the property is from prototype\n                if (!data.hasOwnProperty(key)) continue;\n\n                var obj = data[key];\n\n                var $data = doc.createElement(\"div\");\n                $data.innerHTML = obj.value;\n\n                var $embeds = $data.querySelectorAll(\".\" + embedExtension.opts.cssEmbeds);\n\n                if (typeof $embeds !== \"undefined\" && $embeds !== null && $embeds.length > 0) {\n                    for (var i = 0;  i < $embeds.length; i++) {\n                        var $embed = $embeds[i];\n                        var responseData = dataset($embed, \"originalResponse\");\n                        if (responseData && null !== responseData) {\n                            var originalData = JSON.parse(responseData);\n                            $embed.innerHTML = originalData.html;\n                            var simpleData = {\n                                \"html\": originalData.html,\n                                \"url\": originalData.url\n                            };\n                            dataset($embed).set(\"originalResponse\", JSON.stringify(simpleData));\n                        }\n                        else { //Back compatibility\n                            var $overlay = $embed.querySelector(\".\" + embedExtension.opts.cssEmbedOverlay);\n                            if ($overlay !== null) {\n                                $overlay.parentElement.removeChild($overlay);\n                            }\n                        }\n                        $embed.removeAttribute(\"contenteditable\");\n                        $embed.classList.remove(embedExtension.opts.cssSelected);\n                    }\n                }\n                data[key].value = $data.innerHTML;\n            }\n\n            return data;\n        },\n\n        \"getHtml\": function($elem) {\n            var $wrap = this.document.createElement(\"div\");\n            $wrap.appendChild($elem.cloneNode(true));\n            return $wrap.innerHTML;\n        },\n\n        \"injectScript\": function(url) {\n            var script = this.document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.async = true;\n            script.onLoad = function() {\n            };\n            script.src = this.document.location.protocol + url;\n            this.document.getElementsByTagName(\"head\")[0].appendChild(script);\n        }\n\n    };\n\n    window.EmbedButtonExtension = MediumEditor.extensions.button.extend(embedButton);\n}(window, document, MediumEditor));\n\n"],"sourceRoot":"/source/"}